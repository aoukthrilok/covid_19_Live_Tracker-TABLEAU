<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0614.2321                               -->
<workbook original-version='18.1' source-build='2020.1.5 (20201.20.0614.2321)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <NavigationAction />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Live_data (Carona_live_data)' inline='true' name='federated.1pnohlv1f2hd5517xownr0wv9sm1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='spring2020thrilok.caisfdavr8sk.us-east-2.rds.amazonaws.com' name='mysql.1jmpsz61jz2vuo1cb20t60vf3126'>
            <connection class='mysql' dbname='Carona_live_data' odbc-native-protocol='' one-time-sql='' port='3306' server='spring2020thrilok.caisfdavr8sk.us-east-2.rds.amazonaws.com' source-charset='' username='admin' />
          </named-connection>
        </named-connections>
        <relation connection='mysql.1jmpsz61jz2vuo1cb20t60vf3126' name='Live_data' table='[Live_data]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>OBJECTID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[OBJECTID]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>OBJECTID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province_State]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Province_State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Region]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Country_Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>25</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last_Update</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Last_Update]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Last_Update</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>4</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long_</remote-name>
            <remote-type>4</remote-type>
            <local-name>[Long_]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Long_</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>3</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident_Rate</remote-name>
            <remote-type>4</remote-type>
            <local-name>[Incident_Rate]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Incident_Rate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People_Tested</remote-name>
            <remote-type>3</remote-type>
            <local-name>[People_Tested]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>People_Tested</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People_Hospitalized</remote-name>
            <remote-type>3</remote-type>
            <local-name>[People_Hospitalized]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>People_Hospitalized</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality_Rate</remote-name>
            <remote-type>4</remote-type>
            <local-name>[Mortality_Rate]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Mortality_Rate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[UID]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>UID</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO3]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>ISO3</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospitalization_Rate</remote-name>
            <remote-type>4</remote-type>
            <local-name>[Hospitalization_Rate]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Hospitalization_Rate</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Testing_Rate</remote-name>
            <remote-type>4</remote-type>
            <local-name>[Testing_Rate]</local-name>
            <parent-name>[Live_data]</parent-name>
            <remote-alias>Testing_Rate</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
      <column caption='Hospitalization Rate' datatype='real' name='[Hospitalization_Rate]' role='measure' type='quantitative' />
      <column caption='Iso3' datatype='string' name='[ISO3]' role='dimension' type='nominal' />
      <column caption='Incident Rate' datatype='real' name='[Incident_Rate]' role='measure' type='quantitative' />
      <column caption='Last Update' datatype='real' name='[Last_Update]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Long' datatype='real' name='[Long_]' role='measure' type='quantitative' />
      <column caption='Mortality Rate' datatype='real' name='[Mortality_Rate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Objectid' datatype='integer' name='[OBJECTID]' role='measure' type='quantitative' />
      <column caption='People Hospitalized' datatype='integer' name='[People_Hospitalized]' role='measure' type='quantitative' />
      <column caption='People Tested' datatype='integer' name='[People_Tested]' role='measure' type='quantitative' />
      <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Testing Rate' datatype='real' name='[Testing_Rate]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Country_Region, Province_State'>
          <field>[Country_Region]</field>
          <field>[Province_State]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='E:/Udemy_Courses/Udemy - Tableau 2020 A-ZHands-On Tableau Training For Data Science!/Live_data (Carona_live_data).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/22/2020 06:34:37 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Live_data (Carona_live_data)' increment-value='%null%' refresh-type='create' rows-inserted='555' timestamp-start='2020-06-22 18:34:37.088' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>OBJECTID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[OBJECTID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OBJECTID</remote-alias>
              <ordinal>0</ordinal>
              <family>Live_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>555</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Province_State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Province_State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Province_State</remote-alias>
              <ordinal>1</ordinal>
              <family>Live_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>547</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country_Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country_Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_Region</remote-alias>
              <ordinal>2</ordinal>
              <family>Live_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Last_Update</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Last_Update]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Last_Update</remote-alias>
              <ordinal>3</ordinal>
              <family>Live_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lat</remote-alias>
              <ordinal>4</ordinal>
              <family>Live_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>545</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Long_</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Long_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Long_</remote-alias>
              <ordinal>5</ordinal>
              <family>Live_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>536</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>6</ordinal>
              <family>Live_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>517</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>7</ordinal>
              <family>Live_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>265</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>8</ordinal>
              <family>Live_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>431</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Active]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Active</remote-alias>
              <ordinal>9</ordinal>
              <family>Live_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>420</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FIPS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FIPS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FIPS</remote-alias>
              <ordinal>10</ordinal>
              <family>Live_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Incident_Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Incident_Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Incident_Rate</remote-alias>
              <ordinal>11</ordinal>
              <family>Live_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>545</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>People_Tested</remote-name>
              <remote-type>20</remote-type>
              <local-name>[People_Tested]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>People_Tested</remote-alias>
              <ordinal>12</ordinal>
              <family>Live_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>People_Hospitalized</remote-name>
              <remote-type>20</remote-type>
              <local-name>[People_Hospitalized]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>People_Hospitalized</remote-alias>
              <ordinal>13</ordinal>
              <family>Live_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mortality_Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mortality_Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mortality_Rate</remote-alias>
              <ordinal>14</ordinal>
              <family>Live_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>488</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UID</remote-name>
              <remote-type>5</remote-type>
              <local-name>[UID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>UID</remote-alias>
              <ordinal>15</ordinal>
              <family>Live_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>554</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ISO3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ISO3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ISO3</remote-alias>
              <ordinal>16</ordinal>
              <family>Live_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hospitalization_Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hospitalization_Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hospitalization_Rate</remote-alias>
              <ordinal>17</ordinal>
              <family>Live_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Testing_Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Testing_Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Testing_Rate</remote-alias>
              <ordinal>18</ordinal>
              <family>Live_data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>56</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.258964' measure-ordering='alphabetic' measure-percentage='0.741036' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Live_data (Carona_live_data) (2)' inline='true' name='federated.11wux6b1wjqdu01cjcr3c1op36hf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_file' name='textscan.15ycpxm10w4dml1f3zpcm0bjv6jx'>
            <connection class='textscan' directory='E:/tableau' filename='data_file.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.15ycpxm10w4dml1f3zpcm0bjv6jx' name='data_file.csv' table='[data_file#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='OBJECTID' ordinal='0' />
            <column datatype='string' name='Province_State' ordinal='1' />
            <column datatype='string' name='Country_Region' ordinal='2' />
            <column datatype='integer' name='Last_Update' ordinal='3' />
            <column datatype='real' name='Lat' ordinal='4' />
            <column datatype='real' name='Long_' ordinal='5' />
            <column datatype='integer' name='Confirmed' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Recovered' ordinal='8' />
            <column datatype='integer' name='Active' ordinal='9' />
            <column datatype='integer' name='FIPS' ordinal='10' />
            <column datatype='real' name='Incident_Rate' ordinal='11' />
            <column datatype='integer' name='People_Tested' ordinal='12' />
            <column datatype='string' name='People_Hospitalized' ordinal='13' />
            <column datatype='real' name='Mortality_Rate' ordinal='14' />
            <column datatype='integer' name='UID' ordinal='15' />
            <column datatype='string' name='ISO3' ordinal='16' />
            <column datatype='string' name='Hospitalization_Rate' ordinal='17' />
            <column datatype='real' name='Testing_Rate' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBJECTID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OBJECTID]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>OBJECTID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province_State]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Province_State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Region]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Country_Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last_Update</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Last_Update]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Last_Update</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long_]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Long_</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Incident_Rate]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Incident_Rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People_Tested</remote-name>
            <remote-type>20</remote-type>
            <local-name>[People_Tested]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>People_Tested</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People_Hospitalized</remote-name>
            <remote-type>129</remote-type>
            <local-name>[People_Hospitalized]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>People_Hospitalized</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality_Rate]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Mortality_Rate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UID]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>UID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO3]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>ISO3</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospitalization_Rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hospitalization_Rate]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Hospitalization_Rate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Testing_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Testing_Rate]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Testing_Rate</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
      <column caption='Hospitalization Rate' datatype='string' name='[Hospitalization_Rate]' role='dimension' type='nominal' />
      <column caption='Iso3' datatype='string' name='[ISO3]' role='dimension' type='nominal' />
      <column caption='Incident Rate' datatype='real' name='[Incident_Rate]' role='measure' type='quantitative' />
      <column caption='Last Update' datatype='integer' name='[Last_Update]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Long' datatype='real' name='[Long_]' role='measure' type='quantitative' />
      <column caption='Mortality Rate' datatype='real' name='[Mortality_Rate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Objectid' datatype='integer' name='[OBJECTID]' role='measure' type='quantitative' />
      <column caption='People Hospitalized' datatype='string' name='[People_Hospitalized]' role='dimension' type='nominal' />
      <column caption='People Tested' datatype='integer' name='[People_Tested]' role='measure' type='quantitative' />
      <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Testing Rate' datatype='real' name='[Testing_Rate]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Country_Region, Province_State'>
          <field>[Country_Region]</field>
          <field>[Province_State]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='E:/Udemy_Courses/Udemy - Tableau 2020 A-ZHands-On Tableau Training For Data Science!/Live_data (Carona_live_data) (2).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/10/2021 05:07:59 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Live_data (Carona_live_data) (2)' increment-value='%null%' refresh-type='create' rows-inserted='1166' timestamp-start='2021-01-10 17:07:59.586' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>OBJECTID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[OBJECTID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OBJECTID</remote-alias>
              <ordinal>0</ordinal>
              <family>data_file.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>786</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Province_State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Province_State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Province_State</remote-alias>
              <ordinal>1</ordinal>
              <family>data_file.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>638</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country_Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country_Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_Region</remote-alias>
              <ordinal>2</ordinal>
              <family>data_file.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Last_Update</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Last_Update]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Last_Update</remote-alias>
              <ordinal>3</ordinal>
              <family>data_file.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lat</remote-alias>
              <ordinal>4</ordinal>
              <family>data_file.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>743</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Long_</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Long_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Long_</remote-alias>
              <ordinal>5</ordinal>
              <family>data_file.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>603</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>6</ordinal>
              <family>data_file.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>717</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>7</ordinal>
              <family>data_file.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>430</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>8</ordinal>
              <family>data_file.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>510</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Active]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Active</remote-alias>
              <ordinal>9</ordinal>
              <family>data_file.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>541</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FIPS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FIPS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FIPS</remote-alias>
              <ordinal>10</ordinal>
              <family>data_file.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>113</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Incident_Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Incident_Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Incident_Rate</remote-alias>
              <ordinal>11</ordinal>
              <family>data_file.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>778</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>People_Tested</remote-name>
              <remote-type>20</remote-type>
              <local-name>[People_Tested]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>People_Tested</remote-alias>
              <ordinal>12</ordinal>
              <family>data_file.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>People_Hospitalized</remote-name>
              <remote-type>129</remote-type>
              <local-name>[People_Hospitalized]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>People_Hospitalized</remote-alias>
              <ordinal>13</ordinal>
              <family>data_file.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mortality_Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mortality_Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mortality_Rate</remote-alias>
              <ordinal>14</ordinal>
              <family>data_file.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>723</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[UID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>UID</remote-alias>
              <ordinal>15</ordinal>
              <family>data_file.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>785</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ISO3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ISO3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ISO3</remote-alias>
              <ordinal>16</ordinal>
              <family>data_file.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hospitalization_Rate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Hospitalization_Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hospitalization_Rate</remote-alias>
              <ordinal>17</ordinal>
              <family>data_file.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Testing_Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Testing_Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Testing_Rate</remote-alias>
              <ordinal>18</ordinal>
              <family>data_file.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>111</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.292929' measure-ordering='alphabetic' measure-percentage='0.707071' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='data_file' inline='true' name='federated.1c002l40nn755t1do1vrg17qkzc4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_file' name='textscan.14jzz301nq30av1gmzs3h0aa17iy'>
            <connection class='textscan' directory='C:/Users/aoukt/iCloudDrive/tableau project' filename='data_file.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.14jzz301nq30av1gmzs3h0aa17iy' name='data_file.csv' table='[data_file#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='OBJECTID' ordinal='0' />
            <column datatype='string' name='Province_State' ordinal='1' />
            <column datatype='string' name='Country_Region' ordinal='2' />
            <column datatype='integer' name='Last_Update' ordinal='3' />
            <column datatype='real' name='Lat' ordinal='4' />
            <column datatype='real' name='Long_' ordinal='5' />
            <column datatype='integer' name='Confirmed' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Recovered' ordinal='8' />
            <column datatype='integer' name='Active' ordinal='9' />
            <column datatype='integer' name='FIPS' ordinal='10' />
            <column datatype='real' name='Incident_Rate' ordinal='11' />
            <column datatype='integer' name='People_Tested' ordinal='12' />
            <column datatype='string' name='People_Hospitalized' ordinal='13' />
            <column datatype='real' name='Mortality_Rate' ordinal='14' />
            <column datatype='integer' name='UID' ordinal='15' />
            <column datatype='string' name='ISO3' ordinal='16' />
            <column datatype='string' name='Hospitalization_Rate' ordinal='17' />
            <column datatype='real' name='Testing_Rate' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBJECTID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OBJECTID]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>OBJECTID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province_State]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Province_State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Region]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Country_Region</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last_Update</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Last_Update]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Last_Update</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long_</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long_]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Long_</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Incident_Rate]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Incident_Rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People_Tested</remote-name>
            <remote-type>20</remote-type>
            <local-name>[People_Tested]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>People_Tested</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People_Hospitalized</remote-name>
            <remote-type>129</remote-type>
            <local-name>[People_Hospitalized]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>People_Hospitalized</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality_Rate]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Mortality_Rate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UID]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>UID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO3]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>ISO3</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospitalization_Rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hospitalization_Rate]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Hospitalization_Rate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Testing_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Testing_Rate]</local-name>
            <parent-name>[data_file.csv]</parent-name>
            <remote-alias>Testing_Rate</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Confirmed (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[Confirmed]' peg='0' size='14124' />
      </column>
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='%null%' value='&quot;Pakistan&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
      <column caption='Hospitalization Rate' datatype='string' name='[Hospitalization_Rate]' role='dimension' type='nominal' />
      <column caption='Iso3' datatype='string' name='[ISO3]' role='dimension' type='nominal' />
      <column caption='Incident Rate' datatype='real' name='[Incident_Rate]' role='measure' type='quantitative' />
      <column caption='Last Update' datatype='integer' name='[Last_Update]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Long' datatype='real' name='[Long_]' role='measure' type='quantitative' />
      <column caption='Mortality Rate' datatype='real' name='[Mortality_Rate]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Objectid' datatype='integer' name='[OBJECTID]' role='measure' type='quantitative' />
      <column caption='People Hospitalized' datatype='string' name='[People_Hospitalized]' role='dimension' type='nominal' />
      <column caption='People Tested' datatype='integer' name='[People_Tested]' role='measure' type='quantitative' />
      <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Adygea Republic&quot;' value='&quot;Respublika Adygeya&quot;' />
          <semantic-value key='&quot;Anguilla&quot;' value='&quot;Anguilla&quot;' />
          <semantic-value key='&quot;Aysen&quot;' value='&quot;Aysen del Gen. Carlos Ibáñez del Campo&quot;' />
          <semantic-value key='&quot;Azad Jammu and Kashmir&quot;' value='&quot;Jammu and Kashmir&quot;' />
          <semantic-value key='&quot;Baleares&quot;' value='&quot;Illes Balears&quot;' />
        </semantic-values>
      </column>
      <column caption='Testing Rate' datatype='real' name='[Testing_Rate]' role='measure' type='quantitative' />
      <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country Region)' hidden='true' name='[Action (Country Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country_Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Region,Province State)' hidden='true' name='[Action (Country Region,Province State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country_Region]' />
          <groupfilter function='level-members' level='[Province_State]' />
        </groupfilter>
      </group>
      <group caption='Action (Province State)' hidden='true' name='[Action (Province State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Province_State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country_Region, Province_State'>
          <field>[Country_Region]</field>
          <field>[Province_State]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.320717' measure-ordering='alphabetic' measure-percentage='0.679283' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Active:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1c002l40nn755t1do1vrg17qkzc4]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Confirmed:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1c002l40nn755t1do1vrg17qkzc4'>
      <datasources>
        <datasource caption='data_file' name='federated.1c002l40nn755t1do1vrg17qkzc4' />
      </datasources>
      <datasource-dependencies datasource='federated.1c002l40nn755t1do1vrg17qkzc4'>
        <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='%null%' value='&quot;Pakistan&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Country_Region:nk]'>
        <groupfilter from='&quot;Australia&quot;' function='range' level='[none:Country_Region:nk]' to='&quot;US&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <nav-action caption='GoToSheet1' name='[Action1]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Sheet 4' />
      <params>
        <param name='sheet' value='None' />
      </params>
    </nav-action>
    <nav-action caption='GoToSheet4' name='[Action2]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Sheet 3' />
      <params>
        <param name='sheet' value='Sheet 4' />
      </params>
    </nav-action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_file' name='federated.1c002l40nn755t1do1vrg17qkzc4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1c002l40nn755t1do1vrg17qkzc4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='%null%' value='&quot;Pakistan&quot;' />
              </semantic-values>
            </column>
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Adygea Republic&quot;' value='&quot;Respublika Adygeya&quot;' />
                <semantic-value key='&quot;Anguilla&quot;' value='&quot;Anguilla&quot;' />
                <semantic-value key='&quot;Aysen&quot;' value='&quot;Aysen del Gen. Carlos Ibáñez del Campo&quot;' />
                <semantic-value key='&quot;Azad Jammu and Kashmir&quot;' value='&quot;Jammu and Kashmir&quot;' />
                <semantic-value key='&quot;Baleares&quot;' value='&quot;Illes Balears&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country_Region]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Province State)]'>
            <groupfilter function='level-members' level='[Province_State]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Province State)]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Country_Region:nk]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1c002l40nn755t1do1vrg17qkzc4].[Longitude (generated)]' field-type='quantitative' max='37160157.910503268' min='-8390923.0879036933' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1c002l40nn755t1do1vrg17qkzc4].[Latitude (generated)]' field-type='quantitative' max='12211788.448181171' min='-5330070.2760960674' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Confirmed:qk]' max='67801' min='100' num-steps='250' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Country_Region:nk]' />
              <lod column='[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Province_State:nk]' />
              <color column='[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Confirmed:qk]' />
              <geometry column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c002l40nn755t1do1vrg17qkzc4].[Latitude (generated)]</rows>
        <cols>[federated.1c002l40nn755t1do1vrg17qkzc4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B88ED13C-6AED-44CF-A062-E56A16A9AEF2}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_file' name='federated.1c002l40nn755t1do1vrg17qkzc4' />
          </datasources>
          <datasource-dependencies datasource='federated.1c002l40nn755t1do1vrg17qkzc4'>
            <column datatype='integer' name='[Active]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='%null%' value='&quot;Pakistan&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Adygea Republic&quot;' value='&quot;Respublika Adygeya&quot;' />
                <semantic-value key='&quot;Anguilla&quot;' value='&quot;Anguilla&quot;' />
                <semantic-value key='&quot;Aysen&quot;' value='&quot;Aysen del Gen. Carlos Ibáñez del Campo&quot;' />
                <semantic-value key='&quot;Azad Jammu and Kashmir&quot;' value='&quot;Jammu and Kashmir&quot;' />
                <semantic-value key='&quot;Baleares&quot;' value='&quot;Illes Balears&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active]' derivation='Sum' name='[sum:Active:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Active:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country_Region]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region,Province State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country_Region]' />
              <groupfilter function='level-members' level='[Province_State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Province State)]'>
            <groupfilter function='level-members' level='[Province_State]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Country_Region:nk]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region)]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[:Measure Names]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region,Province State)]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Province State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Active:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1c002l40nn755t1do1vrg17qkzc4].[:Measure Names]' />
              <text column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='table' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c002l40nn755t1do1vrg17qkzc4].[Multiple Values]</rows>
        <cols>([federated.1c002l40nn755t1do1vrg17qkzc4].[:Measure Names] / [federated.1c002l40nn755t1do1vrg17qkzc4].[none:Province_State:nk])</cols>
      </table>
      <simple-id uuid='{66F5E0E0-FAF9-4BFC-8D14-3EB3B95CB468}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_file' name='federated.1c002l40nn755t1do1vrg17qkzc4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1c002l40nn755t1do1vrg17qkzc4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='%null%' value='&quot;Pakistan&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Adygea Republic&quot;' value='&quot;Respublika Adygeya&quot;' />
                <semantic-value key='&quot;Anguilla&quot;' value='&quot;Anguilla&quot;' />
                <semantic-value key='&quot;Aysen&quot;' value='&quot;Aysen del Gen. Carlos Ibáñez del Campo&quot;' />
                <semantic-value key='&quot;Azad Jammu and Kashmir&quot;' value='&quot;Jammu and Kashmir&quot;' />
                <semantic-value key='&quot;Baleares&quot;' value='&quot;Illes Balears&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country_Region]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region,Province State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country_Region]' />
              <groupfilter function='level-members' level='[Province_State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Province State)]'>
            <groupfilter function='level-members' level='[Province_State]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[:Measure Names]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region,Province State)]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region)]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Province State)]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Country_Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Country_Region:nk]</rows>
        <cols>[federated.1c002l40nn755t1do1vrg17qkzc4].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EC0612E0-145F-4091-9FE9-A8C3E286F035}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_file' name='federated.1c002l40nn755t1do1vrg17qkzc4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1c002l40nn755t1do1vrg17qkzc4'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='%null%' value='&quot;Pakistan&quot;' />
              </semantic-values>
            </column>
            <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Adygea Republic&quot;' value='&quot;Respublika Adygeya&quot;' />
                <semantic-value key='&quot;Anguilla&quot;' value='&quot;Anguilla&quot;' />
                <semantic-value key='&quot;Aysen&quot;' value='&quot;Aysen del Gen. Carlos Ibáñez del Campo&quot;' />
                <semantic-value key='&quot;Azad Jammu and Kashmir&quot;' value='&quot;Jammu and Kashmir&quot;' />
                <semantic-value key='&quot;Baleares&quot;' value='&quot;Illes Balears&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region)]'>
            <groupfilter function='level-members' level='[Country_Region]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region,Province State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country_Region]' />
              <groupfilter function='level-members' level='[Province_State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Province_State:nk]'>
            <groupfilter function='level-members' level='[none:Province_State:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Province_State:nk]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region)]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[Action (Country Region,Province State)]</column>
            <column>[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Country_Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Province_State:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E572D37B-AC11-4FE9-887B-1678CE1E801D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='data_file' name='federated.1c002l40nn755t1do1vrg17qkzc4' />
      </datasources>
      <datasource-dependencies datasource='federated.1c002l40nn755t1do1vrg17qkzc4'>
        <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='%null%' value='&quot;Pakistan&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='83375' id='5' name='Sheet 4' w='28300' x='68200' y='2500' />
        <zone h='33250' id='3' name='Sheet 3' w='33300' x='2600' y='39375' />
        <zone h='32375' id='6' name='Sheet 2' show-title='false' w='63000' x='500' y='72625' />
        <zone h='36750' id='12' name='Sheet 1' w='63200' x='1000' y='2500' />
        <zone h='8000' id='11' name='Sheet 2' pane-specification-id='0' param='[federated.1c002l40nn755t1do1vrg17qkzc4].[:Measure Names]' type='color' w='14000' x='51000' y='62750' />
        <zone h='6250' id='15' mode='pattern' name='Sheet 1' param='[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Country_Region:nk]' type='filter' values='cascading' w='26200' x='37700' y='45250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='28' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6250' id='15' mode='pattern' name='Sheet 1' param='[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Country_Region:nk]' type='filter' values='cascading' w='26200' x='37700' y='45250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36750' id='12' is-fixed='true' name='Sheet 1' w='63200' x='1000' y='2500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83375' id='5' is-fixed='true' name='Sheet 4' w='28300' x='68200' y='2500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33250' id='3' is-fixed='true' name='Sheet 3' w='33300' x='2600' y='39375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='259' h='32375' id='6' is-fixed='true' name='Sheet 2' show-title='false' w='63000' x='500' y='72625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='11' name='Sheet 2' pane-specification-id='0' param='[federated.1c002l40nn755t1do1vrg17qkzc4].[:Measure Names]' type='color' w='14000' x='51000' y='62750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{88441004-6BE8-4DF7-A974-3F35BC4C4EB3}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='72'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1c002l40nn755t1do1vrg17qkzc4].[sum:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Country_Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{567B2D00-FC75-4664-B128-6496FAB3657F}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1c002l40nn755t1do1vrg17qkzc4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c002l40nn755t1do1vrg17qkzc4].[:Measure Names]</field>
            <field>[federated.1c002l40nn755t1do1vrg17qkzc4].[Multiple Values]</field>
            <field>[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Country_Region:nk]</field>
            <field>[federated.1c002l40nn755t1do1vrg17qkzc4].[none:People_Tested:nk]</field>
            <field>[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Province_State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7D8782C6-D55C-43CE-AAE2-3B270C2233E7}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C4333F27-9B55-48CB-B739-FE72E7008709}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1c002l40nn755t1do1vrg17qkzc4].[none:Country_Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C27FC011-60EA-4BA7-BFE4-587B7F8E9587}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='16' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1c002l40nn755t1do1vrg17qkzc4].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3' />
        <viewpoint name='Sheet 4' />
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{A342A795-0AE9-4CD6-995B-A1B1FE73AC36}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      Dy14Ofj/mEeKnVDVQDgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      DgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
